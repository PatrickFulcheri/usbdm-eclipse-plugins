/**
 * @file      hardware.cpp (generated from MKL25Z4.usbdmHardware)
 * @version   1.2.0
 * @brief     Pin declarations for FRDM_KL25Z
 *
 * *****************************
 * *** DO NOT EDIT THIS FILE ***
 * *****************************
 *
 * This file is generated automatically.
 * Any manual changes will be lost.
 */

#include "hardware.h"

namespace USBDM {

struct PinInit {
   uint32_t pcrValue;
   uint32_t volatile *pcr;
};

static constexpr PinInit pinInit[] = {
 /* PTA0       ==> SWD_CLK                   */  { PORT_PCR_MUX(7)|USBDM::DEFAULT_PCR, &PORTA->PCR[0],  },
 /* PTA1       ==> UART0_RX                  */  { PORT_PCR_MUX(2)|USBDM::DEFAULT_PCR, &PORTA->PCR[1],  },
 /* PTA2       ==> UART0_TX                  */  { PORT_PCR_MUX(2)|USBDM::DEFAULT_PCR, &PORTA->PCR[2],  },
 /* PTA3       ==> SWD_DIO                   */  { PORT_PCR_MUX(7)|USBDM::DEFAULT_PCR, &PORTA->PCR[3],  },
 /* PTA4       ==> GPIOA_4                   */  { PORT_PCR_MUX(1)|USBDM::DEFAULT_PCR, &PORTA->PCR[4],  },
 /* PTA5       ==> GPIOA_5                   */  { PORT_PCR_MUX(1)|USBDM::DEFAULT_PCR, &PORTA->PCR[5],  },
 /* PTA12      ==> GPIOA_12                  */  { PORT_PCR_MUX(1)|USBDM::DEFAULT_PCR, &PORTA->PCR[12], },
 /* PTA13      ==> GPIOA_13                  */  { PORT_PCR_MUX(1)|USBDM::DEFAULT_PCR, &PORTA->PCR[13], },
 /* PTA16      ==> GPIOA_16                  */  { PORT_PCR_MUX(1)|USBDM::DEFAULT_PCR, &PORTA->PCR[16], },
 /* PTA17      ==> GPIOA_17                  */  { PORT_PCR_MUX(1)|USBDM::DEFAULT_PCR, &PORTA->PCR[17], },
 /* PTA18      ==> EXTAL0                    */  { PORT_PCR_MUX(0)|USBDM::DEFAULT_PCR, &PORTA->PCR[18], },
 /* PTA19      ==> XTAL0                     */  { PORT_PCR_MUX(0)|USBDM::DEFAULT_PCR, &PORTA->PCR[19], },
 /* PTB0       ==> ADC0_SE8/TSI0_CH0         */  { PORT_PCR_MUX(0)|USBDM::DEFAULT_PCR, &PORTB->PCR[0],  },
 /* PTB1       ==> ADC0_SE9/TSI0_CH6         */  { PORT_PCR_MUX(0)|USBDM::DEFAULT_PCR, &PORTB->PCR[1],  },
 /* PTB2       ==> ADC0_SE12/TSI0_CH7        */  { PORT_PCR_MUX(0)|USBDM::DEFAULT_PCR, &PORTB->PCR[2],  },
 /* PTB3       ==> ADC0_SE13/TSI0_CH8        */  { PORT_PCR_MUX(0)|USBDM::DEFAULT_PCR, &PORTB->PCR[3],  },
 /* PTB16      ==> TSI0_CH9                  */  { PORT_PCR_MUX(0)|USBDM::DEFAULT_PCR, &PORTB->PCR[16], },
 /* PTB17      ==> TSI0_CH10                 */  { PORT_PCR_MUX(0)|USBDM::DEFAULT_PCR, &PORTB->PCR[17], },
 /* PTB18      ==> GPIOB_18                  */  { PORT_PCR_MUX(1)|USBDM::DEFAULT_PCR, &PORTB->PCR[18], },
 /* PTB19      ==> GPIOB_19                  */  { PORT_PCR_MUX(1)|USBDM::DEFAULT_PCR, &PORTB->PCR[19], },
 /* PTC2       ==> ADC0_SE11/TSI0_CH15       */  { PORT_PCR_MUX(0)|USBDM::DEFAULT_PCR, &PORTC->PCR[2],  },
 /* PTC5       ==> Disabled                  */  { PORT_PCR_MUX(0)|USBDM::DEFAULT_PCR, &PORTC->PCR[5],  },
 /* PTD1       ==> GPIOD_1                   */  { PORT_PCR_MUX(1)|USBDM::DEFAULT_PCR, &PORTD->PCR[1],  },
 /* PTD3       ==> GPIOD_3                   */  { PORT_PCR_MUX(1)|USBDM::DEFAULT_PCR, &PORTD->PCR[3],  },
 /* PTE24      ==> I2C0_SCL                  */  { PORT_PCR_MUX(5)|USBDM::DEFAULT_PCR, &PORTE->PCR[24], },
 /* PTE25      ==> I2C0_SDA                  */  { PORT_PCR_MUX(5)|USBDM::DEFAULT_PCR, &PORTE->PCR[25], },
};

/**
 * Used to configure pin-mapping before 1st use of peripherals
 */
void usbdm_PinMapping() {

   SIM->FIXED_PORT_CLOCK_REG |= PORTA_CLOCK_MASK|PORTB_CLOCK_MASK|PORTC_CLOCK_MASK|PORTD_CLOCK_MASK|PORTE_CLOCK_MASK;

   for (const PinInit *p=pinInit; p<(pinInit+(sizeof(pinInit)/sizeof(pinInit[0]))); p++) {
      *(p->pcr) = p->pcrValue;
   }
}

} // End namespace USBDM

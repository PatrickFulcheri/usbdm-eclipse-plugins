<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE root SYSTEM "_menu.dtd" >
<!-- uart_def.xml -->
<!--
Devices using this peripheral: 
-->
<devicePage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="UART">

   <aliasOption key="/SIM/sim_sopt2_pllfllsel" constant="false" /> 
   <aliasOption key="/SIM/sim_sopt2_lpuartsrc" constant="false" />
   <aliasOption key="/SIM/system_lpuart_clock" />

   <menu name="Advanced" description="Advanced options">
      <aliasOption key="/SIM/sim_sopt5_lpuart$(_instance)txsrc"  constant="false" optional="true" />
      <aliasOption key="/SIM/sim_sopt5_lpuart$(_instance)rxsrc"  constant="false" optional="true" />
   </menu>

   <projectActionList id = "lpuart_files">
      <copy source="Project_Headers/lpuart.h"  target="Project_Headers/lpuart.h"  replace="true"  derived="true" />
   </projectActionList>
         
   <template>
      \t/**
      \t * Get input clock frequency
      \t *
      \t * @return Input clock frequency as a uint32_t in Hz
      \t */
      \tstatic uint32_t getInputClockFrequency() {
      \t   switch(SIM->SOPT2&amp;SIM_SOPT2_LPUARTSRC_MASK) {
      \t   default:
      \t   case SIM_SOPT2_LPUARTSRC(0): return 0;
      \t   case SIM_SOPT2_LPUARTSRC(1): return SystemPeripheralClock;
      \t   case SIM_SOPT2_LPUARTSRC(2): return SystemOscerClock;
      \t   case SIM_SOPT2_LPUARTSRC(3): return SystemMcgirClock;
      \t   }
      \t}\n\n
      
      \t/**
      \t * Get clock frequency
      \t *
      \t * @return Input clock frequency as a uint32_t in Hz
      \t */
      \tstatic uint32_t getClockFrequency() {
      \t   switch(SIM->SOPT2&amp;SIM_SOPT2_LPUARTSRC_MASK) {
      \t   default:
      \t   case SIM_SOPT2_LPUARTSRC(0): return 0;
      \t   case SIM_SOPT2_LPUARTSRC(1):
      \t#ifdef SIM_CLKDIV3_PLLFLLFRAC_MASK
      \t      {
      \t      int  pllfllfrac  = (SIM-&gt;CLKDIV3&amp;SIM_CLKDIV3_PLLFLLFRAC_MASK)&gt;&gt;SIM_CLKDIV3_PLLFLLFRAC_SHIFT;
      \t      int  pllflldiv   = (SIM-&gt;CLKDIV3&amp;SIM_CLKDIV3_PLLFLLDIV_MASK)&gt;&gt;SIM_CLKDIV3_PLLFLLDIV_SHIFT;
      \t      return (SystemPeripheralClock*(pllfllfrac+1))/(pllflldiv+1);
      \t      }
      \t#else
      \t      return SystemPeripheralClock;
      \t#endif
      \t   case SIM_SOPT2_LPUARTSRC(2): return SystemOscerClock;
      \t   case SIM_SOPT2_LPUARTSRC(3): return SystemMcgirClock;
      \t   }
      \t}\n\n
   </template>

   <pins/>
</devicePage>

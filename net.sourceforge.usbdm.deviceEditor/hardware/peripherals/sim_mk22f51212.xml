<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE devicePage SYSTEM "_menu.dtd" >
<!-- sim_mk22f51512.xml -->
<!--
Devices using this peripheral: 
-->
<devicePage xmlns:xi="http://www.w3.org/2001/XInclude" name="_instance" description="SIM">
   
   <category name="SOPT1" description="RTC signals">
      <choiceOption name="sim_sopt1_osc32ksel" 
         description="ERCLK32K source"
         toolTip="Clock source of External 32k Reference Clock [ERCLK32K]\n
            Used by LPTMR">
         <choice value="0"  name="System oscillator in low range (OSC32KCLK)" />
         <choice value="1"  name="Reserved" />
         <choice value="2"  name="RTC 32kHz clock" isDefault="true" />
         <choice value="3"  name="LPO 1kHz clock" />
      </choiceOption>
      
      <intOption name="system_erclk32k_clock" 
         units="Hz"
         description="Frequency of External 32k Reference Clock [ERCLK32K]"
         toolTip="Derived from OSC32KCLK, RTCCLK or LPO" 
         value="32000"
         constant="true" />
   
      <choiceOption name="sim_sopt1_osc32kout" 
         description="ERCLK32K Clock Output"
         toolTip="Outputs the ERCLK32K on the selected pin in all modes of operation">
         <choice value="0"  name="ERCLK32K is not output" isDefault="true" />
         <choice value="1"  name="ERCLK32K is output on PTE0" />
         <choice value="2"  name="ERCLK32K is output on PTE26" />
         <choice value="3"  name="Reserved" />
      </choiceOption>
   </category>
   <template><![CDATA[
      \t//! System Options Register 1
      \tstatic constexpr uint32_t sopt1 = 
      \t   SIM_SOPT1_OSC32KSEL($(sim_sopt1_osc32ksel)) |    // 32K oscillator clock select
      \t   SIM_SOPT1_OSC32KOUT($(sim_sopt1_osc32kout));     // 32K oscillator clock out pin select\n\n

      \t/**
      \t * Get ERCLK32K clock frequency
      \t *
      \t * @return Clock frequency as a uint32_t in Hz
      \t */
      \tstatic uint32_t getErc32kClock() {
      \t
      \t   switch(sim->SOPT1&SIM_SOPT1_OSC32KSEL_MASK) {
      \t      default                     : return 0;
      \t      case SIM_SOPT1_OSC32KSEL(0) : return Osc0Info::getOsc32kClock();
      \t      case SIM_SOPT1_OSC32KSEL(2) : return RtcInfo::getExternalClock();
      \t      case SIM_SOPT1_OSC32KSEL(3) : return 1000;
      \t   }
      \t}\n\n
   ]]></template>
   
   <category name="SOPT2" description="Clock Gating">
      <binaryOption name="sim_sopt2_rtcclkoutsel" 
         description="RTC clock out select [RTC_CLKOUT pin]"
         toolTip="Clock output on the RTC_CLKOUT pin">
         <choice value="0"  name="RTC 1 Hz clock" />
         <choice value="1"  name="RTC 32.768kHz clock" isDefault="true" />
      </binaryOption>
   
      <choiceOption name="sim_sopt2_pllfllsel" 
         description="Peripheral Clock select"
         toolTip="Selects the clock for various peripherals (LPUART, TPM etc.)">
         <choice value="0"  name="MCGFLLCLK clock" isDefault="true" />
         <choice value="1"  name="MCGPLLCLK clock" />
         <choice value="2"  name="Reserved" />
         <choice value="3"  name="IRC48 MHz clock" />
      </choiceOption>
   
      <intOption name="system_peripheral_clock"
         constant="true"
         units="Hz"
         description="Peripheral Clock frequency"
         toolTip="Frequency of Peripheral Clock available to various peripherals"  />
         
      <choiceOption name="sim_sopt2_lpuartsrc" 
         description="LPUART Clock select"
         toolTip="Selects the clock source for the transmit and receive clock">
         <choice value="0"  name="Disabled" />
         <choice value="1"  name="Peripheral Clock" />
         <choice value="2"  name="OSCERCLK clock" />
         <choice value="3"  name="MCGIRCLK clock"  isDefault="true" />
      </choiceOption>
   
      <intOption name="system_lpuart_clock" 
         constant="true"
         units="Hz"
         description="LPUART Clock frequency"
         toolTip="Frequency of clock to LPUART"
         value="0" />
   
      <choiceOption name="sim_sopt2_usbsrc" 
         description="USB clock source select"
         toolTip="Selects the source for the USB clock">
         <choice value="0"  name="External bypass clock (USB_CLKIN)" />
         <choice value="1"  name="Peripheral Clock divided by SIM_CLKDIV2" isDefault="true" />
      </choiceOption>
   
      <intOption name="system_usbfs_clock" 
         constant="true"
         units="Hz"
         description="USB Full Speed Clock"
         toolTip="Frequency of clock to USB full speed controller"
         value="0" />
   
      <choiceOption name="sim_sopt2_clkoutsel" 
         description="CLKOUT select"
         toolTip="Selects the clock to output on the CLKOUT pin." >
         <choice value="0"  name="FlexBus CLKOUT" />
         <choice value="1"  name="Reserved" />
         <choice value="2"  name="Flash clock" isDefault="true" />
         <choice value="3"  name="LPO clock (1 kHz)" />
         <choice value="4"  name="MCGIRCLK" />
         <choice value="5"  name="RTC 32.768kHz clock" />
         <choice value="6"  name="OSCERCLK0" />
         <choice value="7"  name="IRC 48 MHz clock" />
      </choiceOption>
   </category>
   <template><![CDATA[
      \t//! System Options Register 2
      \tstatic constexpr uint32_t sopt2 = 
      \t   SIM_SOPT2_LPUARTSRC($(sim_sopt2_lpuartsrc)) |     // LPUART clock source select
      \t   SIM_SOPT2_USBSRC($(sim_sopt2_usbsrc)) |        // USB clock source select
      \t   SIM_SOPT2_PLLFLLSEL($(sim_sopt2_pllfllsel)) |     // PLL/FLL clock select
      \t   SIM_SOPT2_CLKOUTSEL($(sim_sopt2_clkoutsel)) |     // CLKOUT pin clock source select
      \t   SIM_SOPT2_RTCCLKOUTSEL($(sim_sopt2_rtcclkoutsel));   // RTC clock out select\n\n

      \t/**
      \t * Get Peripheral clock frequency
      \t *
      \t * @return Frequency as a uint32_t in Hz
      \t */
      \tstatic uint32_t getPeripheralClock() {
      \t   
      \t   switch(sim->SOPT2&SIM_SOPT2_PLLFLLSEL_MASK) {
      \t      default:                     return 0;
      \t      case SIM_SOPT2_PLLFLLSEL(0): return SystemMcgFllClock;
      \t      case SIM_SOPT2_PLLFLLSEL(1): return SystemMcgPllClock;
      \t      case SIM_SOPT2_PLLFLLSEL(3): return McgInfo::irc48m_clock;
      \t   }
      \t}\n\n

      \t/**
      \t * Get LPUART0 input clock frequency
      \t *
      \t * @return Frequency as a uint32_t in Hz
      \t */
      \tstatic uint32_t getLpuart0InputClock() {
      \t   
      \t   switch(sim->SOPT2&SIM_SOPT2_LPUARTSRC_MASK) {
      \t   default:
      \t   case SIM_SOPT2_LPUARTSRC(0): return 0;
      \t   case SIM_SOPT2_LPUARTSRC(1): return getPeripheralClock();
      \t   case SIM_SOPT2_LPUARTSRC(2): return Osc0Info::getOscerClock();
      \t   case SIM_SOPT2_LPUARTSRC(3): return McgInfo::getMcgIrClock();
      \t   }
      \t}\n\n
      
      \t/**
      \t * Get LPUART0 clock frequency
      \t *
      \t * @return Frequency as a uint32_t in Hz
      \t */
      \tstatic uint32_t getLpuart0Clock() {
      \t   
      \t   switch(sim->SOPT2&SIM_SOPT2_LPUARTSRC_MASK) {
      \t   default:
      \t   case SIM_SOPT2_LPUARTSRC(0): return 0;
      \t   case SIM_SOPT2_LPUARTSRC(1): return getPeripheralClock();
      \t   case SIM_SOPT2_LPUARTSRC(2): return Osc0Info::getOscerClock();
      \t   case SIM_SOPT2_LPUARTSRC(3): return McgInfo::getMcgIrClock();
      \t   }
      \t}\n\n

   ]]></template>
   <category name="SOPT4" description="FTM signals">
      <binaryOption name="sim_sopt4_ftm3trg1src" 
         description="FlexTimer 3 Hardware Trigger 1 Source Select"
         toolTip="Selects the source of FTM hardware trigger 1" >
         <choice value="0"  name="Reserved" />
         <choice value="1"  name="FTM2 channel match" isDefault="true" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm3trg0src" 
         description="FlexTimer 3 Hardware Trigger 0 Source Select"
         toolTip="Selects the source of FTM hardware trigger 0" >
         <choice value="0"  name="Reserved" />
         <choice value="1"  name="FTM1 channel match" isDefault="true" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm0trg1src" 
         description="FlexTimer 0 Hardware Trigger 1 Source Select"
         toolTip="Selects the source of FTM hardware trigger 1" >
         <choice value="0"  name="PDB output trigger 1" isDefault="true" />
         <choice value="1"  name="FTM2 channel match" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm0trg0src" 
         description="FlexTimer 0 Hardware Trigger 0 Source Select"
         toolTip="Selects the source of FTM hardware trigger 0" >
         <choice value="0"  name="HSCMP0 output" isDefault="true" />
         <choice value="1"  name="FTM1 channel match" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm3clksel" 
         description="FlexTimer 3 External Clock Pin Select"
         toolTip="Selects the external pin used to drive the clock to the FTM module.">
         <choice value="0"  name="FTM_CLKIN0 pin" isDefault="true" />
         <choice value="1"  name="FTM_CLKIN1 pin" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm2clksel" 
         description="FlexTimer 2 External Clock Pin Select"
         toolTip="Selects the external pin used to drive the clock to the FTM module.">
         <choice value="0"  name="FTM_CLKIN0 pin" isDefault="true" />
         <choice value="1"  name="FTM_CLKIN1 pin" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm1clksel" 
         description="FlexTimer 1 External Clock Pin Select"
         toolTip="Selects the external pin used to drive the clock to the FTM module.">
         <choice value="0"  name="FTM_CLKIN0 pin" isDefault="true" />
         <choice value="1"  name="FTM_CLKIN1 pin" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm0clksel" 
         description="FlexTimer 0 External Clock Pin Select"
         toolTip="Selects the external pin used to drive the clock to the FTM module.">
         <choice value="0"  name="FTM_CLKIN0 pin" isDefault="true" />
         <choice value="1"  name="FTM_CLKIN1 pin" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm2ch1src" 
         description="FlexTimer 2 channel 1 input capture source select"
         toolTip="Selects the source for FTM channel 1 input capture\n
            NOTE: When the FTM is not in input capture mode, clear this field">
         <choice value="0" name="FTM2_CH1 signal"  isDefault="true"/>
         <choice value="2" name="FTM2_CH1 xor FTM2_CH0 xor FTM1_CH1" />
      </binaryOption>
   
      <choiceOption name="sim_sopt4_ftm2ch0src" 
         description="FlexTimer 2 channel 0 input capture source select"
         toolTip="Selects the source for FTM channel 0 input capture\n
            NOTE: When the FTM is not in input capture mode, clear this field">
         <choice value="0" name="FTM2_CH0 signal"  isDefault="true"/>
         <choice value="1" name="CMP0 output" />
         <choice value="2" name="CMP1 output" />
         <choice value="3" name="Reserved" />
      </choiceOption>
   
      <choiceOption name="sim_sopt4_ftm1ch0src" 
         description="FlexTimer 1 channel 0 input capture source select"
         toolTip="Selects the source for FTM channel 0 input capture\n
            NOTE: When the FTM is not in input capture mode, clear this field">
         <choice value="0" name="FTM1_CH0 signal"  isDefault="true"/>
         <choice value="1" name="CMP0 output" />
         <choice value="2" name="CMP1 output" />
         <choice value="3" name="USB start of frame pulse" />
      </choiceOption>
   
      <binaryOption name="sim_sopt4_ftm3flt0" 
         description="FlexTimer 3 Fault 0 Select"
         toolTip="Selects the source of FTM fault 0" >
         <choice value="0"  name="FTM3_FLT0 pin" isDefault="true" />
         <choice value="1"  name="CMP0 output" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm2flt0" 
         description="FlexTimer 2 Fault 0 Select"
         toolTip="Selects the source of FTM fault input  0" >
         <choice value="0"  name="FTM2_FLT0 pin" isDefault="true" />
         <choice value="1"  name="CMP0 output" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm1flt0" 
         description="FlexTimer 1 Fault 0 Select"
         toolTip="Selects the source of FTM fault input 0" >
         <choice value="0"  name="FTM1_FLT0 pin" isDefault="true" />
         <choice value="1"  name="CMP0 output" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm0flt1" 
         description="FlexTimer 0 Fault 1 Select"
         toolTip="Selects the source of FTM fault input 1" >
         <choice value="0"  name="FTM0_FLT1 pin" isDefault="true" />
         <choice value="1"  name="CMP1 output" />
      </binaryOption>
   
      <binaryOption name="sim_sopt4_ftm0flt0" 
         description="FlexTimer 0 Fault 0 Select"
         toolTip="Selects the source of FTM fault input 0" >
         <choice value="0"  name="FTM0_FLT0 pin" isDefault="true" />
         <choice value="1"  name="CMP0 output" />
      </binaryOption>
   </category>
   <template><![CDATA[
      \t//! System Options Register 4
      \tstatic constexpr uint32_t sopt4 = 
      \t   SIM_SOPT4_FTM3TRG1SRC($(sim_sopt4_ftm3trg1src)) |   // FlexTimer 3 Hardware Trigger 1 Source Select
      \t   SIM_SOPT4_FTM3TRG0SRC($(sim_sopt4_ftm3trg0src)) |   // FlexTimer 3 Hardware Trigger 0 Source Select
      \t   SIM_SOPT4_FTM0TRG1SRC($(sim_sopt4_ftm0trg1src)) |   // FlexTimer 0 Hardware Trigger 1 Source Select
      \t   SIM_SOPT4_FTM0TRG0SRC($(sim_sopt4_ftm0trg0src)) |   // FlexTimer 0 Hardware Trigger 0 Source Select
      \t   SIM_SOPT4_FTM3CLKSEL($(sim_sopt4_ftm3clksel))  |   // FlexTimer 3 External Clock Pin Select
      \t   SIM_SOPT4_FTM2CLKSEL($(sim_sopt4_ftm2clksel))  |   // FlexTimer 2 External Clock Pin Select
      \t   SIM_SOPT4_FTM1CLKSEL($(sim_sopt4_ftm1clksel))  |   // FlexTimer 1 External Clock Pin Select
      \t   SIM_SOPT4_FTM0CLKSEL($(sim_sopt4_ftm0clksel))  |   // FlexTimer 0 External Clock Pin Select
      \t   SIM_SOPT4_FTM2CH1SRC($(sim_sopt4_ftm2ch1src))  |   // FTM2 channel 1 input capture source select
      \t   SIM_SOPT4_FTM2CH0SRC($(sim_sopt4_ftm2ch0src))  |   // FTM2 channel 0 input capture source select
      \t   SIM_SOPT4_FTM1CH0SRC($(sim_sopt4_ftm1ch0src))  |   // FTM1 channel 0 input capture source select
      \t   SIM_SOPT4_FTM3FLT0($(sim_sopt4_ftm3flt0))    |   // FlexTimer 3 Fault 0 Select
      \t   SIM_SOPT4_FTM2FLT0($(sim_sopt4_ftm2flt0))    |   // FlexTimer 2 Fault 0 Select
      \t   SIM_SOPT4_FTM1FLT0($(sim_sopt4_ftm1flt0))    |   // FlexTimer 1 Fault 0 Select
      \t   SIM_SOPT4_FTM0FLT1($(sim_sopt4_ftm0flt1))    |   // FlexTimer 0 Fault 1 Select
      \t   SIM_SOPT4_FTM0FLT0($(sim_sopt4_ftm0flt0));       // FlexTimer 0 Fault 0 Select\n\n
   ]]></template>
   <category name="SOPT5" description="UART signals">
      <choiceOption name="sim_sopt5_uart0txsrc" 
         description="UART 0 transmit data source select"
         toolTip="Selects the source for the UART 0 transmit data.">
         <choice value="0" name="UART0_TX pin" isDefault="true" />
         <choice value="1" name="UART0_TX pin modulated with FTM1 channel 0 output" />
         <choice value="2" name="UART0_TX pin modulated with FTM2 channel 0 output" />
         <choice value="3" name="Reserved" />
      </choiceOption>
   
      <choiceOption name="sim_sopt5_uart0rxsrc" 
         description="UART 0 receive data source select"
         toolTip="Selects the source for the UART 0 receive data.">
         <choice value="0" name="UART0_RX pin" isDefault="true" />
         <choice value="1" name="CMP0 output" />
         <choice value="2" name="CMP1 output" />
         <choice value="3" name="Reserved" />
      </choiceOption>
   
      <choiceOption name="sim_sopt5_uart1txsrc" 
         description="UART 1 transmit data source select"
         toolTip="Selects the source for the UART 1 transmit data.">
         <choice value="0" name="UART1_TX pin" isDefault="true" />
         <choice value="1" name="UART1_TX pin modulated with FTM1 channel 0 output" />
         <choice value="1" name="UART1_TX pin modulated with FTM2 channel 0 output" />
         <choice value="3" name="Reserved" />
      </choiceOption>
   
      <choiceOption name="sim_sopt5_uart1rxsrc" 
         description="UART 1 receive data source select"
         toolTip="Selects the source for the UART 1 receive data">
         <choice value="0" name="UART1_RX pin" isDefault="true" />
         <choice value="1" name="CMP0 output" />
         <choice value="2" name="CMP1 output" />
         <choice value="3" name="Reserved" />
      </choiceOption>
   
      <choiceOption name="sim_sopt5_lpuart0rxsrc" 
         description="UART 1 receive data source select"
         toolTip="Selects the source for the UART 1 receive data">
         <choice value="0" name="LPUART0_RX pin" isDefault="true" />
         <choice value="1" name="CMP0 output" />
         <choice value="2" name="CMP1 output" />
         <choice value="3" name="Reserved" />
      </choiceOption>
   </category>
   <template><![CDATA[
      \t//! System Options Register 5
      \tstatic constexpr uint32_t sopt5 = 
      \t   SIM_SOPT5_UART0TXSRC($(sim_sopt5_uart0txsrc)) |      // UART 0 transmit data source select
      \t   SIM_SOPT5_UART0RXSRC($(sim_sopt5_uart0rxsrc)) |      // UART 0 receive data source select
      \t   SIM_SOPT5_UART1TXSRC($(sim_sopt5_uart1txsrc)) |      // UART 1 transmit data source select
      \t   SIM_SOPT5_UART1RXSRC($(sim_sopt5_uart1rxsrc)) |      // UART 1 receive data source select
      \t   SIM_SOPT5_LPUART0RXSRC($(sim_sopt5_lpuart0rxsrc)); // LPUART 0 receive data source select\n\n
   ]]></template>
   <category name="SOPT7" description="ADC signals">
      <binaryOption name="sim_sopt7_adc0alttrgen" 
         description="ADC0 alternate trigger enable"
         toolTip="Enable alternative conversion triggers for ADC0">
         <choice value="0" name="PDB trigger selected" isDefault="true" />
         <choice value="1" name="Alternate trigger selected" />
      </binaryOption>
   
      <binaryOption name="sim_sopt7_adc0pretrgsel" 
         description="ADC0 pretrigger select"
         toolTip="Selects the pre-trigger source when alternative triggers are enabled through ADC0ALTTRGEN">
         <choice value="0" name="Pre-trigger A" isDefault="true" />
         <choice value="1" name="Pre-trigger B" />
      </binaryOption>
   
      <choiceOption name="sim_sopt7_adc0trgsel" 
         description="ADC0 trigger select"
         toolTip="Selects the trigger source when alternative triggers are functional in stop and VLPS modes">
         <choice value="0"  name="PDB external trigger pin input (PDB0_EXTRG)" isDefault="true" />
         <choice value="1"  name="High speed comparator 0 output" />
         <choice value="2"  name="High speed comparator 1 output" />
         <choice value="3"  name="Reserved" />
         <choice value="4"  name="PIT trigger 0" />
         <choice value="5"  name="PIT trigger 1" />
         <choice value="6"  name="PIT trigger 2" />
         <choice value="7"  name="PIT trigger 3" />
         <choice value="8"  name="FTM0 trigger" />
         <choice value="9"  name="FTM1 trigger" />
         <choice value="10" name="FTM2 trigger" />
         <choice value="11" name="FTM3 trigger" />
         <choice value="12" name="RTC alarm" />
         <choice value="13" name="RTC seconds" />
         <choice value="14" name="Low-power timer trigger" />
         <choice value="15" name="Reserved" />
      </choiceOption>
      
      <binaryOption name="sim_sopt7_adc1alttrgen" 
         description="ADC1 alternate trigger enable"
         toolTip="Enable alternative conversion triggers for ADC1">
         <choice value="0" name="PDB trigger selected" isDefault="true" />
         <choice value="1" name="Alternate trigger selected" />
      </binaryOption>
   
      <binaryOption name="sim_sopt7_adc1pretrgsel" 
         description="ADC1 pretrigger select"
         toolTip="Selects the pre-trigger source when alternative triggers are enabled through ADC1ALTTRGEN">
         <choice value="0" name="Pre-trigger A" isDefault="true" />
         <choice value="1" name="Pre-trigger B" />
      </binaryOption>
   
      <choiceOption name="sim_sopt7_adc1trgsel" 
         description="ADC1 trigger select"
         toolTip="Selects the trigger source when alternative triggers are functional in stop and VLPS modes">
         <choice value="0"  name="PDB external trigger pin input (PDB0_EXTRG)" isDefault="true" />
         <choice value="1"  name="High speed comparator 0 output" />
         <choice value="2"  name="High speed comparator 1 output" />
         <choice value="3"  name="Reserved" />
         <choice value="4"  name="PIT trigger 0" />
         <choice value="5"  name="PIT trigger 1" />
         <choice value="6"  name="PIT trigger 2" />
         <choice value="7"  name="PIT trigger 3" />
         <choice value="8"  name="FTM0 trigger" />
         <choice value="9"  name="FTM1 trigger" />
         <choice value="10" name="FTM2 trigger" />
         <choice value="11" name="FTM3 trigger" />
         <choice value="12" name="RTC alarm" />
         <choice value="13" name="RTC seconds" />
         <choice value="14" name="Low-power timer trigger" />
         <choice value="15" name="Reserved" />
      </choiceOption>
   </category>
   <template><![CDATA[
      \t//! System Options Register 7
      \tstatic constexpr uint32_t sopt7 = 
      \t   SIM_SOPT7_ADC1ALTTRGEN($(sim_sopt7_adc1alttrgen)) |    // ADC1 alternate trigger enable
      \t   SIM_SOPT7_ADC1PRETRGSEL($(sim_sopt7_adc1pretrgsel)) |   // ADC1 pretrigger select
      \t   SIM_SOPT7_ADC1TRGSEL($(sim_sopt7_adc1trgsel)) |      // ADC1 trigger select\n\n
      \t   SIM_SOPT7_ADC0ALTTRGEN($(sim_sopt7_adc0alttrgen)) |    // ADC0 alternate trigger enable
      \t   SIM_SOPT7_ADC0PRETRGSEL($(sim_sopt7_adc0pretrgsel)) |   // ADC0 pretrigger select
      \t   SIM_SOPT7_ADC0TRGSEL($(sim_sopt7_adc0trgsel));       // ADC0 trigger select\n\n
   ]]></template>
   <category name="SOPT8" description="FTM signals">
      <binaryOption name="sim_sopt8_ftm3och7src" 
         description="FTM3 channel 7 output source" >
         <choice value="0" name="FTM3_CH7 pin is FTM3 ch 7 output" />
         <choice value="1" name="FTM3_CH7 pin is FTM3 ch 7 output, modulated by FTM2 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm3och6src" 
         description="FTM3 channel 6 output source" >
         <choice value="0" name="FTM3_CH6 pin is FTM3 ch 6 output" />
         <choice value="1" name="FTM3_CH6 pin is FTM3 ch 6 output, modulated by FTM2 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm3och5src" 
         description="FTM3 channel 5 output source" >
         <choice value="0" name="FTM3_CH5 pin is FTM3 ch 5 output" />
         <choice value="1" name="FTM3_CH5 pin is FTM3 ch 5 output, modulated by FTM2 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm3och4src" 
         description="FTM3 channel 4 output source" >
         <choice value="0" name="FTM3_CH4 pin is FTM3 ch 4 output" />
         <choice value="1" name="FTM3_CH4 pin is FTM3 ch 4 output, modulated by FTM2 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm3och3src" 
         description="FTM3 channel 3 output source" >
         <choice value="0" name="FTM3_CH3 pin is FTM3 ch 3 output" />
         <choice value="1" name="FTM3_CH3 pin is FTM3 ch 3 output, modulated by FTM2 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm3och2src" 
         description="FTM3 channel 2 output source" >
         <choice value="0" name="FTM3_CH2 pin is FTM3 ch 2 output" />
         <choice value="1" name="FTM3_CH2 pin is FTM3 ch 2 output, modulated by FTM2 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm3och1src" 
         description="FTM3 channel 1 output source" >
         <choice value="0" name="FTM3_CH1 pin is FTM3 ch 1 output" />
         <choice value="1" name="FTM3_CH1 pin is FTM3 ch 1 output, modulated by FTM2 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm3och0src" 
         description="FTM3 channel 0 output source" >
         <choice value="3" name="FTM3_CH0 pin is FTM3 ch 0 output" />
         <choice value="1" name="FTM3_CH0 pin is FTM3 ch 0 output, modulated by FTM2 ch 1" />
      </binaryOption>
      <binaryOption name="sim_sopt8_ftm0och7src" 
         description="FTM0 channel 7 output source" >
         <choice value="0" name="FTM0_CH7 pin is FTM0 ch 7 output" />
         <choice value="1" name="FTM0_CH7 pin is FTM0 ch 7 output, modulated by FTM1 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm0och6src" 
         description="FTM0 channel 6 output source" >
         <choice value="0" name="FTM0_CH6 pin is FTM0 ch 6 output" />
         <choice value="1" name="FTM0_CH6 pin is FTM0 ch 6 output, modulated by FTM1 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm0och5src" 
         description="FTM0 channel 5 output source" >
         <choice value="0" name="FTM0_CH5 pin is FTM0 ch 5 output" />
         <choice value="1" name="FTM0_CH5 pin is FTM0 ch 5 output, modulated by FTM1 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm0och4src" 
         description="FTM0 channel 4 output source" >
         <choice value="0" name="FTM0_CH4 pin is FTM0 ch 4 output" />
         <choice value="1" name="FTM0_CH4 pin is FTM0 ch 4 output, modulated by FTM1 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm0och3src" 
         description="FTM0 channel 3 output source" >
         <choice value="0" name="FTM0_CH3 pin is FTM0 ch 3 output" />
         <choice value="1" name="FTM0_CH3 pin is FTM0 ch 3 output, modulated by FTM1 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm0och2src" 
         description="FTM0 channel 2 output source" >
         <choice value="0" name="FTM0_CH2 pin is FTM0 ch 2 output" />
         <choice value="1" name="FTM0_CH2 pin is FTM0 ch 2 output, modulated by FTM1 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm0och1src" 
         description="FTM0 channel 1 output source" >
         <choice value="0" name="FTM0_CH1 pin is FTM0 ch 1 output" />
         <choice value="1" name="FTM0_CH1 pin is FTM0 ch 1 output, modulated by FTM1 ch 1" />
      </binaryOption>

      <binaryOption name="sim_sopt8_ftm0och0src" 
         description="FTM0 channel 0 output source" >
         <choice value="0" name="FTM0_CH0 pin is FTM0 ch 0 output" />
         <choice value="1" name="FTM0_CH0 pin is FTM0 ch 0 output, modulated by FTM1 ch 1" />
      </binaryOption>
   </category>
   <template><![CDATA[
      \t//! System Options Register 8
      \tstatic constexpr uint32_t sopt8 = 
      \t   SIM_SOPT8_FTM3OCH7SRC($(sim_sopt8_ftm3och7src)) |   // FTM3 channel 7 output source
      \t   SIM_SOPT8_FTM3OCH6SRC($(sim_sopt8_ftm3och6src)) |   // FTM3 channel 6 output source
      \t   SIM_SOPT8_FTM3OCH5SRC($(sim_sopt8_ftm3och5src)) |   // FTM3 channel 5 output source
      \t   SIM_SOPT8_FTM3OCH4SRC($(sim_sopt8_ftm3och4src)) |   // FTM3 channel 4 output source
      \t   SIM_SOPT8_FTM3OCH3SRC($(sim_sopt8_ftm3och3src)) |   // FTM3 channel 3 output source
      \t   SIM_SOPT8_FTM3OCH2SRC($(sim_sopt8_ftm3och2src)) |   // FTM3 channel 2 output source
      \t   SIM_SOPT8_FTM3OCH1SRC($(sim_sopt8_ftm3och1src)) |   // FTM3 channel 1 output source
      \t   SIM_SOPT8_FTM3OCH0SRC($(sim_sopt8_ftm3och0src)) |   // FTM3 channel 0 output source
      \t   SIM_SOPT8_FTM0OCH7SRC($(sim_sopt8_ftm0och7src)) |   // FTM0 channel 7 output source
      \t   SIM_SOPT8_FTM0OCH6SRC($(sim_sopt8_ftm0och6src)) |   // FTM0 channel 6 output source
      \t   SIM_SOPT8_FTM0OCH5SRC($(sim_sopt8_ftm0och5src)) |   // FTM0 channel 5 output source
      \t   SIM_SOPT8_FTM0OCH4SRC($(sim_sopt8_ftm0och4src)) |   // FTM0 channel 4 output source
      \t   SIM_SOPT8_FTM0OCH3SRC($(sim_sopt8_ftm0och3src)) |   // FTM0 channel 3 output source
      \t   SIM_SOPT8_FTM0OCH2SRC($(sim_sopt8_ftm0och2src)) |   // FTM0 channel 2 output source
      \t   SIM_SOPT8_FTM0OCH1SRC($(sim_sopt8_ftm0och1src)) |   // FTM0 channel 1 output source
      \t   SIM_SOPT8_FTM0OCH0SRC($(sim_sopt8_ftm0och0src));    // FTM0 channel 0 output source\n\n
   ]]></template>
   <category name="CLKDIV1" description="System Clock Dividers">
      <intOption name="sim_clkdiv1_outdiv1" 
         constant="true"
         description="Core &amp; System Clock Divider (OUTDIV1) - Divide by [1-16]"
         toolTip="Clocks the ARM Cortex-M4 core and bus masters [SIM_CLKDIV1_OUTDIV1]\n
                  Divides MCGOUT Clock to generate system_core_clock"
         value="1" offset="-1" min="1" max="16" />
   
      <intOption name="sim_clkdiv1_outdiv2" 
         constant="true"
         description="Bus Clock Divider (OUTDIV2) - Divide by [1-16]"
         toolTip="Clocks the bus slaves and peripheral [SIM_CLKDIV1_OUTDIV2]\n
            Divides MCGOUT Clock to generate system_bus_clock\n
            MCGOUTCLK clock is source. Default /2"
         value="1" offset="-1" min="1" max="16" />
   
      <intOption name="sim_clkdiv1_outdiv3" 
         constant="true"
         description="Flexbus Clock Divider (OUTDIV3) - Divide by [1-16]"
         toolTip="Clocks the flexbus interface [SIM_CLKDIV1_OUTDIV3]\n
                  Divides MCGOUT Clock to generate system_flexbus_clock\n
                  MCGOUTCLK clock is source. Default /2"
         value="1" offset="-1" min="1" max="16" />
   
      <intOption name="sim_clkdiv1_outdiv4" 
         constant="true"
         description="Flash Clock Divider (OUTDIV4) - Divide by [1-16]"
         toolTip="Clocks the flash memory [SIM_CLKDIV1_OUTDIV4]\n
                  Divides MCGOUT Clock to generate system_flash_clock\n
                  MCGOUTCLK clock is source. Default /4"
         value="4" offset="-1" min="1" max="16" />
   </category>
   <template><![CDATA[
      \t//! System Clock Divider Register 1
      \tstatic constexpr uint32_t clkdiv1 = 
      \t   SIM_CLKDIV1_OUTDIV4($(sim_clkdiv1_outdiv4))|  // Flash clock
      \t   SIM_CLKDIV1_OUTDIV3($(sim_clkdiv1_outdiv3))|  // FlexBus clock
      \t   SIM_CLKDIV1_OUTDIV2($(sim_clkdiv1_outdiv2))|  // Bus clock
      \t   SIM_CLKDIV1_OUTDIV1($(sim_clkdiv1_outdiv1));  // Core/system clock \n\n
   ]]></template>
   <category name="CLKDIV2" description="USB Clock Dividers">
      <choiceOption name="sim_clkdiv2_usb"
         description="USB clock divider" 
         toolTip="Sets the clock divider when the MCGFLLCLK, MCGPLLCLK, or IRC48M clock\n
         is the USB clock source.">
         <choice value="1" name="Multiply by 2 (div=0, frac=1)" />
         <choice value="0" name="Multiply by 1 (div=0, frac=0)" />
         <choice value="3" name="Multiply by 1 (div=1, frac=1)" />
         <choice value="5" name="Divide by 1.5 (div=2, frac=1)" />
         <choice value="2" name="Divide by 2 (div=1, frac=0)" />
         <choice value="7" name="Divide by 2 (div=3, frac=1)" />
         <choice value="9" name="Divide by 2.5 (div=4, frac=1)" />
         <choice value="4" name="Divide by 3 (div=2, frac=0)" />
         <choice value="11" name="Divide by 3 (div=5, frac=1)" />
         <choice value="13" name="Divide by 3.5 (div=6, frac=1)" />
         <choice value="6" name="Divide by 4 (div=3, frac=0)" />
         <choice value="15" name="Divide by 4 (div=7, frac=1)" />
         <choice value="8" name="Divide by 5 (div=4, frac=0)" />
         <choice value="10" name="Divide by 6 (div=5, frac=0)" />
         <choice value="12" name="Divide by 7 (div=6, frac=0)" />
         <choice value="14" name="Divide by 8 (div=7, frac=0)" />
      </choiceOption>
   </category>   
   <template><![CDATA[
      \t//! System Clock Divider Register 2
      \tstatic constexpr uint32_t clkdiv2 = 
      \t   $(sim_clkdiv2_usb);  // USB clock divider divisor & fraction \n\n
   ]]></template>
   
   <intOption name="system_core_clock" 
      units="Hz"
      description="System Core Clock"
      toolTip="Clocks the ARM Cortex-M4 core and bus masters"
      value="120000000" />

   <intOption name="system_bus_clock" 
      units="Hz"
      description="System Bus Clock"
      toolTip="Clocks the bus slaves and peripherals\n
               Must be &lt;= Core Clock frequency and an integer divisor"
      value="60000000" />

   <intOption name="system_flexbus_clock" 
      units="Hz"
      description="System Flexbus Clock"
      toolTip="Clocks the flexbus interface\n
               Must be &lt;= Bus Clock frequency"
      value="60000000" />

   <intOption name="system_flash_clock" 
      units="Hz"
      description="System Flash Clock"
      toolTip="Clocks the flash memory\n
               Must be an integer divisor of the Core Clock.\n
               Must be &lt;= Bus Clock frequency."
      value="24000000" />

   <projectActionList id = "sim" >
      <copy source="Project_Headers/pcr-MK.h"    target="Project_Headers/pcr.h"  replace="true"  derived="true" />
   </projectActionList>
         
   <validate
      class="net.sourceforge.usbdm.deviceEditor.validators.SimValidate">
      <param type="long" value="120MHz" />    <!-- Core         -->
      <param type="long" value="60MHz" />     <!-- Bus          -->
      <param type="long" value="27MHz" />     <!-- Flash        -->
      <param type="long" value="30MHz" />     <!-- FlexBus      -->
   </validate>

   <xi:include href="_simFiles.xml"/>
         
   <template><![CDATA[
      \t/**
      \t * Initialise SIM registers
      \t */
      \tstatic void initRegs() {
      \t   
      \t   #ifdef SIM_SCGC4_USBOTG_MASK
      \t   // The USB interface must be disabled for clock changes to have effect
      \t   sim->SCGC4 &= ~SIM_SCGC4_USBOTG_MASK;
      \t   #endif
      \t
      \t   sim->SOPT1 = sopt1;
      \t   sim->SOPT2 = sopt2;
      \t   sim->SOPT4 = sopt4;
      \t   sim->SOPT5 = sopt5;
      \t   sim->SOPT7 = sopt7;
      \t   sim->SOPT8 = sopt8;
      \t
      \t   sim->CLKDIV1 = clkdiv1;
      \t   sim->CLKDIV2 = clkdiv2;
      \t}
   ]]></template>
</devicePage>
